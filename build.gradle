plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven {
		url 'file://Users/syrongk10/projects/syrongk/repos'
	}
	mavenCentral()
}

//ext {
//	set('springCloudVersion', "2023.0.2")
//}

def coreVersion = '0.0.6-SNAPSHOT'

dependencies {
	implementation "org.example:core:${coreVersion}"
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
//	implementation 'org.springframework.cloud:spring-cloud-config-server'
//	implementation 'org.springframework.cloud:spring-cloud-starter-config'
//	implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
//	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
//	implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

//dependencyManagement {
//	imports {
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//	}
//}

test {
	useJUnitPlatform()
}
